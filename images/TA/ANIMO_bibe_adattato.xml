<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'>
<nta>
	<declaration>
// Place global declarations here.
clock globalTime;
const int INFINITE_TIME = -1;
const int N_REACTANTS = 4;
broadcast chan reacting[N_REACTANTS];

//R2 = C
int R2 := 15;

//R3 = D
int R3 := 15;

//R1 = B
int R1 := 15;

//R0 = A
int R0 := 0;

</declaration>
	<template>
		<name x="5" y="5">Reaction_R3_R0</name>
		<parameter>int &amp;reactant1, int &amp;reactant2, int &amp;output_reactant, const int timeL[15+1], const int timeU[15+1], const int delta, broadcast chan &amp;r1_reacting, broadcast chan &amp;r2_reacting, broadcast chan &amp;output_reacting</parameter>
		<declaration>// Place local declarations here.
clock c;
int r1, r2;</declaration>
		<location id="id0" x="-1328" y="-952">
			<name x="-1338" y="-982">s2</name>
		</location>
		<location id="id1" x="-1064" y="-800">
			<name x="-1074" y="-830">s4</name>
			<urgent/>
		</location>
		<location id="id2" x="-1328" y="-696">
			<name x="-1338" y="-726">s3</name>
			<label kind="invariant" x="-1568" y="-720">timeU[r1] == INFINITE_TIME
|| c&lt;=timeU[r1]</label>
		</location>
		<location id="id3" x="-1328" y="-840">
			<name x="-1352" y="-864">s1</name>
			<urgent/>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-1592" y="-1016">r1_reacting?</label>
			<label kind="assignment" x="-1592" y="-1000">c:=0</label>
			<nail x="-1360" y="-984"/>
			<nail x="-1616" y="-984"/>
			<nail x="-1616" y="-512"/>
			<nail x="-784" y="-512"/>
			<nail x="-784" y="-736"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-1096" y="-640">c&gt;=timeL[r1]
&amp;&amp; output_reactant+delta&gt;15</label>
			<label kind="synchronisation" x="-1096" y="-608">output_reacting!</label>
			<label kind="assignment" x="-1096" y="-592">output_reactant:=15,
c:=0</label>
			<nail x="-1280" y="-656"/>
			<nail x="-1104" y="-656"/>
			<nail x="-1104" y="-560"/>
			<nail x="-848" y="-560"/>
			<nail x="-848" y="-704"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-1576" y="-640">c&gt;=timeL[r1]
&amp;&amp; output_reactant+delta&lt;0</label>
			<label kind="synchronisation" x="-1576" y="-608">output_reacting!</label>
			<label kind="assignment" x="-1576" y="-592">output_reactant:=0,
c:=0</label>
			<nail x="-1416" y="-656"/>
			<nail x="-1584" y="-656"/>
			<nail x="-1584" y="-544"/>
			<nail x="-816" y="-544"/>
			<nail x="-816" y="-720"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-1224" y="-768">r1_reacting?</label>
			<nail x="-1248" y="-752"/>
			<nail x="-1088" y="-752"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-1384" y="-648">c&gt;=timeL[r1]
&amp;&amp; output_reactant+delta&gt;=0
&amp;&amp; output_reactant+delta&lt;=15</label>
			<label kind="synchronisation" x="-1384" y="-608">output_reacting!</label>
			<label kind="assignment" x="-1384" y="-592">output_reactant:=output_reactant+delta,
c:=0</label>
			<nail x="-1328" y="-656"/>
			<nail x="-1392" y="-656"/>
			<nail x="-1392" y="-552"/>
			<nail x="-832" y="-552"/>
			<nail x="-832" y="-712"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-1272" y="-968">output_reactant == 0 || output_reactant == 15 ||
timeL[reactant1] == INFINITE_TIME</label>
			<nail x="-952" y="-800"/>
			<nail x="-952" y="-952"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="-1480" y="-912">timeL[reactant1] == INFINITE_TIME</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-1296" y="-856">output_reactant &gt; 0 &amp;&amp; output_reactant &lt; 15
&amp;&amp; timeU[reactant1] != INFINITE_TIME
&amp;&amp; c&gt;timeU[reactant1]</label>
			<label kind="assignment" x="-1296" y="-816">c:=timeU[reactant1],
r1:=reactant1</label>
			<nail x="-1248" y="-800"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-1272" y="-752">output_reactant &gt; 0 &amp;&amp; output_reactant &lt; 15
&amp;&amp; (timeU[reactant1] == INFINITE_TIME
&amp;&amp; timeL[reactant1] != INFINITE_TIME)
|| (timeU[reactant1] != INFINITE_TIME
&amp;&amp; c&lt;=timeU[reactant1])</label>
			<label kind="assignment" x="-1272" y="-688">r1:=reactant1</label>
			<nail x="-1064" y="-696"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-1528" y="-824">timeL[reactant1] 
  != INFINITE_TIME</label>
			<label kind="assignment" x="-1448" y="-792">r1 := reactant1,
c:=0</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Reaction_R2_R0</name>
		<parameter>int &amp;reactant1, int &amp;reactant2, int &amp;output_reactant, const int timeL[15+1], const int timeU[15+1], const int delta, broadcast chan &amp;r1_reacting, broadcast chan &amp;r2_reacting, broadcast chan &amp;output_reacting</parameter>
		<declaration>// Place local declarations here.
clock c;
int r1, r2;</declaration>
		<location id="id4" x="-1328" y="-952">
			<name x="-1338" y="-982">s2</name>
		</location>
		<location id="id5" x="-1064" y="-800">
			<name x="-1074" y="-830">s4</name>
			<urgent/>
		</location>
		<location id="id6" x="-1328" y="-696">
			<name x="-1338" y="-726">s3</name>
			<label kind="invariant" x="-1568" y="-720">timeU[r1] == INFINITE_TIME
|| c&lt;=timeU[r1]</label>
		</location>
		<location id="id7" x="-1328" y="-840">
			<name x="-1352" y="-864">s1</name>
			<urgent/>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-1592" y="-1016">r1_reacting?</label>
			<label kind="assignment" x="-1592" y="-1000">c:=0</label>
			<nail x="-1360" y="-984"/>
			<nail x="-1616" y="-984"/>
			<nail x="-1616" y="-512"/>
			<nail x="-784" y="-512"/>
			<nail x="-784" y="-736"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-1096" y="-640">c&gt;=timeL[r1]
&amp;&amp; output_reactant+delta&gt;15</label>
			<label kind="synchronisation" x="-1096" y="-608">output_reacting!</label>
			<label kind="assignment" x="-1096" y="-592">output_reactant:=15,
c:=0</label>
			<nail x="-1280" y="-656"/>
			<nail x="-1104" y="-656"/>
			<nail x="-1104" y="-560"/>
			<nail x="-848" y="-560"/>
			<nail x="-848" y="-704"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-1576" y="-640">c&gt;=timeL[r1]
&amp;&amp; output_reactant+delta&lt;0</label>
			<label kind="synchronisation" x="-1576" y="-608">output_reacting!</label>
			<label kind="assignment" x="-1576" y="-592">output_reactant:=0,
c:=0</label>
			<nail x="-1416" y="-656"/>
			<nail x="-1584" y="-656"/>
			<nail x="-1584" y="-544"/>
			<nail x="-816" y="-544"/>
			<nail x="-816" y="-720"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-1224" y="-768">r1_reacting?</label>
			<nail x="-1248" y="-752"/>
			<nail x="-1088" y="-752"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-1384" y="-648">c&gt;=timeL[r1]
&amp;&amp; output_reactant+delta&gt;=0
&amp;&amp; output_reactant+delta&lt;=15</label>
			<label kind="synchronisation" x="-1384" y="-608">output_reacting!</label>
			<label kind="assignment" x="-1384" y="-592">output_reactant:=output_reactant+delta,
c:=0</label>
			<nail x="-1328" y="-656"/>
			<nail x="-1392" y="-656"/>
			<nail x="-1392" y="-552"/>
			<nail x="-832" y="-552"/>
			<nail x="-832" y="-712"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="guard" x="-1272" y="-968">output_reactant == 0 || output_reactant == 15 ||
timeL[reactant1] == INFINITE_TIME</label>
			<nail x="-952" y="-800"/>
			<nail x="-952" y="-952"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
			<label kind="guard" x="-1480" y="-912">timeL[reactant1] == INFINITE_TIME</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-1296" y="-856">output_reactant &gt; 0 &amp;&amp; output_reactant &lt; 15
&amp;&amp; timeU[reactant1] != INFINITE_TIME
&amp;&amp; c&gt;timeU[reactant1]</label>
			<label kind="assignment" x="-1296" y="-816">c:=timeU[reactant1],
r1:=reactant1</label>
			<nail x="-1248" y="-800"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-1272" y="-752">output_reactant &gt; 0 &amp;&amp; output_reactant &lt; 15
&amp;&amp; (timeU[reactant1] == INFINITE_TIME
&amp;&amp; timeL[reactant1] != INFINITE_TIME)
|| (timeU[reactant1] != INFINITE_TIME
&amp;&amp; c&lt;=timeU[reactant1])</label>
			<label kind="assignment" x="-1272" y="-688">r1:=reactant1</label>
			<nail x="-1064" y="-696"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="guard" x="-1528" y="-824">timeL[reactant1] 
  != INFINITE_TIME</label>
			<label kind="assignment" x="-1448" y="-792">r1 := reactant1,
c:=0</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Reaction_R1_R0</name>
		<parameter>int &amp;reactant1, int &amp;reactant2, int &amp;output_reactant, const int timeL[15+1], const int timeU[15+1], const int delta, broadcast chan &amp;r1_reacting, broadcast chan &amp;r2_reacting, broadcast chan &amp;output_reacting</parameter>
		<declaration>// Place local declarations here.
clock c;
int r1, r2;</declaration>
		<location id="id8" x="-1328" y="-952">
			<name x="-1338" y="-982">s2</name>
		</location>
		<location id="id9" x="-1064" y="-800">
			<name x="-1074" y="-830">s4</name>
			<urgent/>
		</location>
		<location id="id10" x="-1328" y="-696">
			<name x="-1338" y="-726">s3</name>
			<label kind="invariant" x="-1568" y="-720">timeU[r1] == INFINITE_TIME
|| c&lt;=timeU[r1]</label>
		</location>
		<location id="id11" x="-1328" y="-840">
			<name x="-1352" y="-864">s1</name>
			<urgent/>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-1592" y="-1016">r1_reacting?</label>
			<label kind="assignment" x="-1592" y="-1000">c:=0</label>
			<nail x="-1360" y="-984"/>
			<nail x="-1616" y="-984"/>
			<nail x="-1616" y="-512"/>
			<nail x="-784" y="-512"/>
			<nail x="-784" y="-736"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="-1096" y="-640">c&gt;=timeL[r1]
&amp;&amp; output_reactant+delta&gt;15</label>
			<label kind="synchronisation" x="-1096" y="-608">output_reacting!</label>
			<label kind="assignment" x="-1096" y="-592">output_reactant:=15,
c:=0</label>
			<nail x="-1280" y="-656"/>
			<nail x="-1104" y="-656"/>
			<nail x="-1104" y="-560"/>
			<nail x="-848" y="-560"/>
			<nail x="-848" y="-704"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="-1576" y="-640">c&gt;=timeL[r1]
&amp;&amp; output_reactant+delta&lt;0</label>
			<label kind="synchronisation" x="-1576" y="-608">output_reacting!</label>
			<label kind="assignment" x="-1576" y="-592">output_reactant:=0,
c:=0</label>
			<nail x="-1416" y="-656"/>
			<nail x="-1584" y="-656"/>
			<nail x="-1584" y="-544"/>
			<nail x="-816" y="-544"/>
			<nail x="-816" y="-720"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-1224" y="-768">r1_reacting?</label>
			<nail x="-1248" y="-752"/>
			<nail x="-1088" y="-752"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="-1384" y="-648">c&gt;=timeL[r1]
&amp;&amp; output_reactant+delta&gt;=0
&amp;&amp; output_reactant+delta&lt;=15</label>
			<label kind="synchronisation" x="-1384" y="-608">output_reacting!</label>
			<label kind="assignment" x="-1384" y="-592">output_reactant:=output_reactant+delta,
c:=0</label>
			<nail x="-1328" y="-656"/>
			<nail x="-1392" y="-656"/>
			<nail x="-1392" y="-552"/>
			<nail x="-832" y="-552"/>
			<nail x="-832" y="-712"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-1272" y="-968">output_reactant == 0 || output_reactant == 15 ||
timeL[reactant1] == INFINITE_TIME</label>
			<nail x="-952" y="-800"/>
			<nail x="-952" y="-952"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id8"/>
			<label kind="guard" x="-1480" y="-912">timeL[reactant1] == INFINITE_TIME</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="-1296" y="-856">output_reactant &gt; 0 &amp;&amp; output_reactant &lt; 15
&amp;&amp; timeU[reactant1] != INFINITE_TIME
&amp;&amp; c&gt;timeU[reactant1]</label>
			<label kind="assignment" x="-1296" y="-816">c:=timeU[reactant1],
r1:=reactant1</label>
			<nail x="-1248" y="-800"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="-1272" y="-752">output_reactant &gt; 0 &amp;&amp; output_reactant &lt; 15
&amp;&amp; (timeU[reactant1] == INFINITE_TIME
&amp;&amp; timeL[reactant1] != INFINITE_TIME)
|| (timeU[reactant1] != INFINITE_TIME
&amp;&amp; c&lt;=timeU[reactant1])</label>
			<label kind="assignment" x="-1272" y="-688">r1:=reactant1</label>
			<nail x="-1064" y="-696"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="guard" x="-1528" y="-824">timeL[reactant1] 
  != INFINITE_TIME</label>
			<label kind="assignment" x="-1448" y="-792">r1 := reactant1,
c:=0</label>
		</transition>
	</template>
	<system>
//Reaction R3 (D) --| R0 (A)
const int R3_R0_tLower[15+1] := {
INFINITE_TIME, 250, 125, 83, 63, 50, 42, 36, 31, 28, 25, 23, 21, 19, 18, 17};
const int R3_R0_tUpper[15+1] := {
INFINITE_TIME, 250, 125, 83, 63, 50, 42, 36, 31, 28, 25, 23, 21, 19, 18, 17};

R3_R0 = Reaction_R3_R0(R3, R0, R0, R3_R0_tLower, R3_R0_tUpper, -1, reacting[1], reacting[3], reacting[3]);

//Reaction R2 (C) --&gt; R0 (A)
const int R2_R0_tLower[15+1] := {
INFINITE_TIME, 250, 125, 83, 63, 50, 42, 36, 31, 28, 25, 23, 21, 19, 18, 17};
const int R2_R0_tUpper[15+1] := {
INFINITE_TIME, 250, 125, 83, 63, 50, 42, 36, 31, 28, 25, 23, 21, 19, 18, 17};

R2_R0 = Reaction_R2_R0(R2, R0, R0, R2_R0_tLower, R2_R0_tUpper, 1, reacting[0], reacting[3], reacting[3]);

//Reaction R1 (B) --&gt; R0 (A)
const int R1_R0_tLower[15+1] := {
INFINITE_TIME, 250, 125, 83, 63, 50, 42, 36, 31, 28, 25, 23, 21, 19, 18, 17};
const int R1_R0_tUpper[15+1] := {
INFINITE_TIME, 250, 125, 83, 63, 50, 42, 36, 31, 28, 25, 23, 21, 19, 18, 17};

R1_R0 = Reaction_R1_R0(R1, R0, R0, R1_R0_tLower, R1_R0_tUpper, 1, reacting[2], reacting[3], reacting[3]);





system R3_R0, R2_R0, R1_R0;

</system>
</nta>
